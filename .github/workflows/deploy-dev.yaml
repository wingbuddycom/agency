name: Deploy Dev

on:
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Authenticate with Google Cloud using Workload Identity Federation
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIP_DEV }}
          service_account: cicd-github-actions@wb-dev-383717.iam.gserviceaccount.com
          token_format: "id_token"
          id_token_audience: "https://gcp"
      # OPTIONAL: Print decoded ID token to verify OIDC subject (for troubleshooting)
      - name: Debug OIDC token (remove in production)
        run: |
          echo "${{ steps.auth.outputs.id_token }}" | cut -d '.' -f2 | base64 -d | jq || true

      # Step 3: Set up gcloud CLI
      - uses: google-github-actions/setup-gcloud@v2

      # Step 4: Build your Docker image using Cloud Build
      - name: Build container with Cloud Build
        run: |
          gcloud builds submit ./docker \
            --project=wb-dev-383717 \
            --tag=gcr.io/wb-dev-383717/agency:${{ github.sha }}

      # Step 5: Deploy to Cloud Run
      - uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: agency-dev
          image: gcr.io/wb-dev-383717/agency:${{ github.sha }}
          project_id: wb-dev-383717
          region: us-central1
          flags: |
            --add-cloudsql-instances=wb-dev-383717:us-central1:wbr-dev
            --port=8080
          env_vars: |
            APP_ENV=development
            DB_PASSWORD=${{ secrets.DB_PASSWORD_WBR_DEV }}
            RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}
